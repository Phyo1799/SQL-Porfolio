/* Question for Marketing Analysis  */

-- 1. How many transactions were completed during each marketing campaign?
SELECT
	mc.campaign_name,
	count(t.transaction_id) transacition_count
FROM marketing_campaigns mc
	JOIN sustainable_clothing sc ON mc.product_id = sc.product_id
	JOIN transactions t ON sc.product_id = t.product_id
GROUP BY mc.campaign_name;

-- 2. Which product had the highest sales quantity?
SELECT 
	TOP 1
	sc.product_name,
	sum(t.quantity) total_quantity
FROM sustainable_clothing sc
	JOIN transactions t ON sc.product_id = t.product_id
GROUP BY sc.product_name
ORDER BY total_quantity DESC;

-- 3. What is the total revenue generated from each marketing campaign?
SELECT
	mc.campaign_name,
	sum(sc.price*t.quantity) AS total_revenue
FROM marketing_campaigns mc
	JOIN sustainable_clothing sc ON mc.product_id = sc.product_id
	JOIN transactions t ON sc.product_id = t.product_id
GROUP BY mc.campaign_name;

-- 4. What is the top-selling product category based on the total revenue generated?
SELECT 
	TOP 1
	sc.category,
	sum(sc.price*t.quantity) AS total_revenue
FROM sustainable_clothing sc
	JOIN transactions t ON sc.product_id = t.product_id
GROUP BY sc.category
ORDER BY total_revenue DESC;


-- 5. Which products had a higher quantity sold compared to the average quantity sold?
SELECT *
FROM
	(SELECT
		sc.product_name AS product_name,
		sum(t.quantity) AS total_quantity,
		avg(sum(t.quantity)) OVER () AS avg_quantity
	FROM
		sustainable_clothing sc
		JOIN transactions t ON sc.product_id = t.product_id
	GROUP BY sc.product_name) p
WHERE p.total_quantity > p.avg_quantity;

-- 6. What is the average revenue generated per day during the marketing campaigns?
SELECT
	t.purchase_date AS purchase_date,
	mc.campaign_name AS campaign_name,
	avg(sum(sc.price*t.quantity)) OVER (partition by t.purchase_date) AS avg_revene_perday
FROM transactions t
	JOIN sustainable_clothing sc ON t.product_id = sc.product_id
	JOIN marketing_campaigns mc ON t.product_id = mc.product_id --used JOIN to Filter only from mkt campaign.
GROUP BY mc.campaign_name, t.purchase_date,t.product_id
ORDER BY purchase_date, campaign_name

-- 7. What is the percentage contribution of each product to the total revenue?
WITH product_revenue AS (
	SELECT
		sc.product_id AS product_id,
		sc.product_name AS product_name,
		sum(sc.price*t.quantity) AS total_revenue_byProduct
	FROM
		sustainable_clothing sc
		JOIN transactions t ON sc.product_id = t.product_id
	GROUP BY sc.product_name,sc.product_id)

SELECT
	pr.product_name,
	pr.total_revenue_byProduct,
	ROUND((pr.total_revenue_byProduct/sum(pr.total_revenue_byProduct) OVER())*100,1) AS percentage_contribution
FROM product_revenue pr
GROUP BY pr.product_name,pr.total_revenue_byProduct
ORDER BY percentage_contribution DESC;

-- 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns
WITH source_of_total_quantity AS (
SELECT 
	a.product_id,
	sum(a.quantity) AS total_quantity,
	a.qty_source AS qty_source
FROM (
	SELECT 
	t.quantity,
	t.product_id AS product_id,
	CASE
		WHEN t.product_id = mc.product_id THEN 'sold_during_mktcpg'
		ELSE 'sold_ouside_mktcpg' END AS "qty_source"
	FROM transactions t
		LEFT JOIN marketing_campaigns mc ON t.product_id = mc.product_id --used to show all product_id
		JOIN sustainable_clothing sc ON t.product_id = sc.product_id) a
GROUP BY a.product_id,a.qty_source)

SELECT 
	stq.qty_source AS quantity_source,
	avg(stq.total_quantity) avg_qty_sold
FROM source_of_total_quantity stq
GROUP BY stq.qty_source;

-- 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns
WITH source_of_total_revenue AS (
SELECT 
	a.product_id,
	a.product_name,
	a.qty_source,
	sum(a.quantity*a.price) AS total_revenue
FROM (
	SELECT 
	t.quantity,
	sc.price,
	t.product_id AS product_id,
	sc.product_name AS product_name,
	CASE
		WHEN t.product_id = mc.product_id THEN 'sold_during_mktcpg'
		ELSE 'sold_ouside_mktcpg' END AS "qty_source"
	FROM transactions t
		LEFT JOIN marketing_campaigns mc ON t.product_id = mc.product_id --used to show all product_id
		JOIN sustainable_clothing sc ON t.product_id = sc.product_id) a
GROUP BY a.product_id,a.product_name,a.qty_source)

SELECT 
	str.qty_source AS quantity_source,
	sum(total_revenue) AS total_revenue
FROM source_of_total_revenue str
GROUP BY str.qty_source;


-- 10. Rank the products by their average daily quantity sold
With average_daily_quantity AS (
    SELECT 
        a.product_name,
        AVG(a.daily_quantity) AS avg_daily_quantity
    FROM
        (SELECT
			t.product_id,
			sc.product_name,
			t.purchase_date,
			SUM(t.quantity) AS daily_quantity
		FROM
			transactions t
			JOIN sustainable_clothing sc ON t.product_id = sc.product_id
		GROUP BY
			t.product_id, sc.product_name, t.purchase_date
		) a
    GROUP BY
        a.product_name
)
SELECT
    adq.product_name,
    adq.avg_daily_quantity,
    DENSE_RANK() OVER (ORDER BY adq.avg_daily_quantity DESC) AS rank
FROM
    average_daily_quantity adq
ORDER BY
    rank;